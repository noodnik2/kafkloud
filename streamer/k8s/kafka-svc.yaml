apiVersion: v1
kind: Service
metadata:
  namespace: kafkloud
  name: kafka-svc
  labels:
    component: streamer
    app: kafka
spec:
  ports:
  - port: 9092
  selector:
    component: streamer
    app: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kafkloud
  name: kafka-dpl
  labels:
    component: streamer
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      component: streamer
      app: kafka
  template:
    metadata:
      namespace: kafkloud
      name: kafka-pod
      labels:
        component: streamer
        app: kafka
    spec:
      hostname: kafka-broker
      containers:
      - name: kafka-broker
        image: wurstmeister/kafka@sha256:1e05be28055c8c3527ba4f892b5574411ee713899d1181d43dfdbc4dffcf78df
        imagePullPolicy: Always
        ports:
          - containerPort: 9092
        env:
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper-svc:2181"
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://:9092"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "PLAINTEXT://kafka-svc:9092"
          - name: KAFKA_CREATE_TOPICS
            value: "stream:1:1"
          - name: KAFKA_ALLOW_AUTO_CREATE_TOPICS
            value: "true"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
            value: "1"
          - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
            value: "0"
          - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_JMX_PORT
            value: "9997"
          - name: KAFKA_JMX_OPTS
            value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka-svc -Dcom.sun.management.jmxremote.rmi.port=9997"
